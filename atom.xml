<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>青草蛋糕</title>
  
  <subtitle>每一秒钟的时间都值得铭记</subtitle>
  <link href="https://herenpeng.github.io/atom.xml" rel="self"/>
  
  <link href="https://herenpeng.github.io/"/>
  <updated>2023-12-16T13:10:14.000Z</updated>
  <id>https://herenpeng.github.io/</id>
  
  <author>
    <name>次时代小羊</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot 3.2.0 版本 mysql 依赖下载错误</title>
    <link href="https://herenpeng.github.io/2023/12/16/java/SpringBoot%203.2.0%20%E7%89%88%E6%9C%AC%20mysql%20%E4%BE%9D%E8%B5%96%E4%B8%8B%E8%BD%BD%E9%94%99%E8%AF%AF/"/>
    <id>https://herenpeng.github.io/2023/12/16/java/SpringBoot%203.2.0%20%E7%89%88%E6%9C%AC%20mysql%20%E4%BE%9D%E8%B5%96%E4%B8%8B%E8%BD%BD%E9%94%99%E8%AF%AF/</id>
    <published>2023-12-16T13:10:14.000Z</published>
    <updated>2023-12-16T13:10:14.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近想尝试一下最新的 &lt;code&gt;SpringBoot&lt;/code&gt; 项目，于是将自己的开源项目进行了一些升级。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDK 版本从 &lt;code&gt;JDK8&lt;/code&gt; 升级至 &lt;code&gt;JDK17&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;SpringBoot 版本从 &lt;code&gt;SpringBoot 2.7.3&lt;/code&gt; 升级到 &lt;code&gt;SpringBoot 3.2.0&lt;/code&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
    <category term="MySQL" scheme="https://herenpeng.github.io/tags/MySQL/"/>
    
    <category term="Spring" scheme="https://herenpeng.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Maven 编译速度慢？使用一个小技巧提升 Maven 编译速度！</title>
    <link href="https://herenpeng.github.io/2023/12/16/tool/Maven%20%E7%BC%96%E8%AF%91%E9%80%9F%E5%BA%A6%E6%85%A2%EF%BC%9F%E4%BD%BF%E7%94%A8%E4%B8%80%E4%B8%AA%E5%B0%8F%E6%8A%80%E5%B7%A7%E6%8F%90%E5%8D%87%20Maven%20%E7%BC%96%E8%AF%91%E9%80%9F%E5%BA%A6%EF%BC%81/"/>
    <id>https://herenpeng.github.io/2023/12/16/tool/Maven%20%E7%BC%96%E8%AF%91%E9%80%9F%E5%BA%A6%E6%85%A2%EF%BC%9F%E4%BD%BF%E7%94%A8%E4%B8%80%E4%B8%AA%E5%B0%8F%E6%8A%80%E5%B7%A7%E6%8F%90%E5%8D%87%20Maven%20%E7%BC%96%E8%AF%91%E9%80%9F%E5%BA%A6%EF%BC%81/</id>
    <published>2023-12-16T13:06:24.000Z</published>
    <updated>2023-12-16T13:06:24.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近在工作中使用 Maven 编译 Java 项目，但是使用 Maven 编译并安装，平均耗时 6 分钟以上。&lt;/p&gt;
&lt;p&gt;为了提升工作效率，我们可以通过设置 Maven 编译参数来提升 Maven 的编译速度。&lt;/p&gt;</summary>
    
    
    
    <category term="开发工具" scheme="https://herenpeng.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="IDEA" scheme="https://herenpeng.github.io/tags/IDEA/"/>
    
    <category term="Maven" scheme="https://herenpeng.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot Cache 整合 Redis 缓存框架</title>
    <link href="https://herenpeng.github.io/2023/12/16/java/SpringBoot%20Cache%20%E6%95%B4%E5%90%88%20Redis%20%E7%BC%93%E5%AD%98%E6%A1%86%E6%9E%B6/"/>
    <id>https://herenpeng.github.io/2023/12/16/java/SpringBoot%20Cache%20%E6%95%B4%E5%90%88%20Redis%20%E7%BC%93%E5%AD%98%E6%A1%86%E6%9E%B6/</id>
    <published>2023-12-16T13:03:03.000Z</published>
    <updated>2023-12-16T13:03:03.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;code&gt;SpringBoot&lt;/code&gt; 提供了 &lt;code&gt;SpringBootCache&lt;/code&gt; 框架作为 &lt;code&gt;SpringBoot&lt;/code&gt; 的缓存统一框架，使用 &lt;code&gt;SpringBootCache&lt;/code&gt; ，我们可以使用注解的方式使用缓存，从而避免了写一些重复代码的问题。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
    <category term="Spring" scheme="https://herenpeng.github.io/tags/Spring/"/>
    
    <category term="Redis" scheme="https://herenpeng.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>一篇博客教会你怎么使用Docker安装RabbitMQ</title>
    <link href="https://herenpeng.github.io/2023/06/30/linux/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8Docker%E5%AE%89%E8%A3%85RabbitMQ/"/>
    <id>https://herenpeng.github.io/2023/06/30/linux/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8Docker%E5%AE%89%E8%A3%85RabbitMQ/</id>
    <published>2023-06-29T16:00:09.000Z</published>
    <updated>2023-06-29T16:00:09.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天我们学习使用 Docker 安装 RabbitMQ。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://herenpeng.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://herenpeng.github.io/tags/Linux/"/>
    
    <category term="Docker" scheme="https://herenpeng.github.io/tags/Docker/"/>
    
    <category term="RabbitMQ" scheme="https://herenpeng.github.io/tags/RabbitMQ/"/>
    
  </entry>
  
  <entry>
    <title>一篇博客教会你使用Docker部署Redis哨兵</title>
    <link href="https://herenpeng.github.io/2023/06/26/redis/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E4%BD%BF%E7%94%A8Docker%E9%83%A8%E7%BD%B2Redis%E5%93%A8%E5%85%B5/"/>
    <id>https://herenpeng.github.io/2023/06/26/redis/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E4%BD%BF%E7%94%A8Docker%E9%83%A8%E7%BD%B2Redis%E5%93%A8%E5%85%B5/</id>
    <published>2023-06-26T12:36:05.000Z</published>
    <updated>2023-06-26T12:36:05.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天我们学习使用 &lt;code&gt;Docker&lt;/code&gt; 部署 &lt;code&gt;Redis&lt;/code&gt; 的主从复制，并部署 &lt;code&gt;Redis&lt;/code&gt; 哨兵，实现 &lt;code&gt;Redis&lt;/code&gt; 数据库的高可用。&lt;/p&gt;</summary>
    
    
    
    <category term="Redis" scheme="https://herenpeng.github.io/categories/Redis/"/>
    
    
    <category term="Linux" scheme="https://herenpeng.github.io/tags/Linux/"/>
    
    <category term="Docker" scheme="https://herenpeng.github.io/tags/Docker/"/>
    
    <category term="Redis" scheme="https://herenpeng.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>一篇博客教会你怎么使用Docker安装Redis</title>
    <link href="https://herenpeng.github.io/2023/06/05/redis/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8Docker%E5%AE%89%E8%A3%85Redis/"/>
    <id>https://herenpeng.github.io/2023/06/05/redis/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8Docker%E5%AE%89%E8%A3%85Redis/</id>
    <published>2023-06-05T14:43:12.000Z</published>
    <updated>2023-06-05T14:43:12.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天我们学习使用 &lt;code&gt;Docker&lt;/code&gt; 安装 &lt;code&gt;Redis&lt;/code&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="Redis" scheme="https://herenpeng.github.io/categories/Redis/"/>
    
    
    <category term="Linux" scheme="https://herenpeng.github.io/tags/Linux/"/>
    
    <category term="Docker" scheme="https://herenpeng.github.io/tags/Docker/"/>
    
    <category term="Redis" scheme="https://herenpeng.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Linux虚拟机挂起后重启，Navicat无法连接Docker MySQL容器</title>
    <link href="https://herenpeng.github.io/2023/06/04/linux/Linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%8C%82%E8%B5%B7%E5%90%8E%E9%87%8D%E5%90%AF%EF%BC%8CNavicat%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5Docker%20MySQL%E5%AE%B9%E5%99%A8/"/>
    <id>https://herenpeng.github.io/2023/06/04/linux/Linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%8C%82%E8%B5%B7%E5%90%8E%E9%87%8D%E5%90%AF%EF%BC%8CNavicat%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5Docker%20MySQL%E5%AE%B9%E5%99%A8/</id>
    <published>2023-06-04T04:25:28.000Z</published>
    <updated>2023-06-04T04:25:28.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;将虚拟机挂起后再次重启，但是 Navicat 工具却无法连接 Docker MySQL 容器。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://herenpeng.github.io/categories/Linux/"/>
    
    
    <category term="MySQL" scheme="https://herenpeng.github.io/tags/MySQL/"/>
    
    <category term="Linux" scheme="https://herenpeng.github.io/tags/Linux/"/>
    
    <category term="Docker" scheme="https://herenpeng.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>基于Spring JDBCTemplate的数据库读写分离和主从复制</title>
    <link href="https://herenpeng.github.io/2023/06/03/java/%E5%9F%BA%E4%BA%8ESpring%20JDBCTemplate%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E5%92%8C%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
    <id>https://herenpeng.github.io/2023/06/03/java/%E5%9F%BA%E4%BA%8ESpring%20JDBCTemplate%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E5%92%8C%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</id>
    <published>2023-06-03T05:29:39.000Z</published>
    <updated>2023-06-03T05:29:39.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;数据库读写分离是很多互联网系统中用于提升访问性能的一种手段，其主要实现方式，便是将互联网系统对数据库的读操作和写操作分离在不同的数据库中，从而减少了数据库系统对锁资源的竞争，提升了系统数据库的性能。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
    <category term="MySQL" scheme="https://herenpeng.github.io/tags/MySQL/"/>
    
    <category term="Spring" scheme="https://herenpeng.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript实现贪吃蛇小游戏（网页单机版）</title>
    <link href="https://herenpeng.github.io/2023/05/13/javascript/JavaScript%E5%AE%9E%E7%8E%B0%E8%B4%AA%E5%90%83%E8%9B%87%E5%B0%8F%E6%B8%B8%E6%88%8F%EF%BC%88%E7%BD%91%E9%A1%B5%E5%8D%95%E6%9C%BA%E7%89%88%EF%BC%89/"/>
    <id>https://herenpeng.github.io/2023/05/13/javascript/JavaScript%E5%AE%9E%E7%8E%B0%E8%B4%AA%E5%90%83%E8%9B%87%E5%B0%8F%E6%B8%B8%E6%88%8F%EF%BC%88%E7%BD%91%E9%A1%B5%E5%8D%95%E6%9C%BA%E7%89%88%EF%BC%89/</id>
    <published>2023-05-13T04:27:59.000Z</published>
    <updated>2023-05-13T04:27:59.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天使用 &lt;code&gt;JavaScript&lt;/code&gt; 实现了一个网页版的贪吃蛇小游戏。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://herenpeng.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://herenpeng.github.io/tags/JavaScript/"/>
    
    <category term="贪吃蛇" scheme="https://herenpeng.github.io/tags/%E8%B4%AA%E5%90%83%E8%9B%87/"/>
    
    <category term="小游戏" scheme="https://herenpeng.github.io/tags/%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>七大排序算法的Python实现</title>
    <link href="https://herenpeng.github.io/2023/05/10/algorithm/%E4%B8%83%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://herenpeng.github.io/2023/05/10/algorithm/%E4%B8%83%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2023-05-10T07:51:13.000Z</published>
    <updated>2023-05-10T07:51:13.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天使用 &lt;code&gt;Python&lt;/code&gt; 实现了一遍七种常见的排序算法。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构与算法" scheme="https://herenpeng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="排序算法" scheme="https://herenpeng.github.io/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
    <category term="Python" scheme="https://herenpeng.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript实现一个排序算法的演示动画</title>
    <link href="https://herenpeng.github.io/2023/04/28/algorithm/JavaScript%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E6%BC%94%E7%A4%BA%E5%8A%A8%E7%94%BB/"/>
    <id>https://herenpeng.github.io/2023/04/28/algorithm/JavaScript%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E6%BC%94%E7%A4%BA%E5%8A%A8%E7%94%BB/</id>
    <published>2023-04-28T10:24:57.000Z</published>
    <updated>2023-04-28T10:24:57.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在学习排序算法的时候，单纯的文字或者代码无法直观地表示出算法的具体排序过程，而自己手动画出示意图也比较麻烦，所以作者使用 JavaScript 实现了一个简单的排序算法的演示动画页面。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="数据结构与算法" scheme="https://herenpeng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="JavaScript" scheme="https://herenpeng.github.io/tags/JavaScript/"/>
    
    <category term="排序算法" scheme="https://herenpeng.github.io/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>一篇博客教会你怎么使用Docker安装并配置Nginx</title>
    <link href="https://herenpeng.github.io/2023/03/16/linux/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8Docker%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AENginx/"/>
    <id>https://herenpeng.github.io/2023/03/16/linux/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8Docker%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AENginx/</id>
    <published>2023-03-16T15:13:31.000Z</published>
    <updated>2023-03-16T15:13:31.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;首先我们需要安装Docker，如果没有安装Docker的朋友，可以参考我以前的博客&lt;a href=&quot;/2020/04/16/tool/一篇博客教会你怎么安装Docker/&quot;&gt;一篇博客教会你怎么安装Docker&lt;/a&gt;进行Docker的安装。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://herenpeng.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://herenpeng.github.io/tags/Linux/"/>
    
    <category term="Docker" scheme="https://herenpeng.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>使用Python写一个一键项目部署工具</title>
    <link href="https://herenpeng.github.io/2023/03/15/python/%E4%BD%BF%E7%94%A8Python%E5%86%99%E4%B8%80%E4%B8%AA%E4%B8%80%E9%94%AE%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%B7%A5%E5%85%B7/"/>
    <id>https://herenpeng.github.io/2023/03/15/python/%E4%BD%BF%E7%94%A8Python%E5%86%99%E4%B8%80%E4%B8%AA%E4%B8%80%E9%94%AE%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%B7%A5%E5%85%B7/</id>
    <published>2023-03-15T12:07:54.000Z</published>
    <updated>2023-03-15T12:24:04.473Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近在工作中总是需要在开发和测试环境频繁部署项目，之前使用的工具是 &lt;code&gt;filezilla&lt;/code&gt; 和 &lt;code&gt;XShell&lt;/code&gt;，分别用来上传文件和登录远程终端，这两个工具虽然功能强大，但是都需要手动执行操作。&lt;/p&gt;
&lt;p&gt;为了减少这些繁琐的工作，于是使用功能强大的 &lt;code&gt;Python&lt;/code&gt; 编写了一个一键部署项目的脚本。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://herenpeng.github.io/categories/Python/"/>
    
    
    <category term="Python" scheme="https://herenpeng.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>推荐几种简洁美观的博客背景效果</title>
    <link href="https://herenpeng.github.io/2023/03/14/javascript/%E6%8E%A8%E8%8D%90%E5%87%A0%E7%A7%8D%E7%AE%80%E6%B4%81%E7%BE%8E%E8%A7%82%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%83%8C%E6%99%AF%E6%95%88%E6%9E%9C/"/>
    <id>https://herenpeng.github.io/2023/03/14/javascript/%E6%8E%A8%E8%8D%90%E5%87%A0%E7%A7%8D%E7%AE%80%E6%B4%81%E7%BE%8E%E8%A7%82%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%83%8C%E6%99%AF%E6%95%88%E6%9E%9C/</id>
    <published>2023-03-14T14:21:09.000Z</published>
    <updated>2023-03-14T14:21:09.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;在很多的博客网页中，都有一些非常简洁美观的博客动画背景，比如 &lt;code&gt;Canvas-Ribbon&lt;/code&gt;、 &lt;code&gt;three-waves&lt;/code&gt;、 &lt;code&gt;canvas-nest&lt;/code&gt;、 &lt;code&gt;canvas_lines&lt;/code&gt;、 &lt;code&gt;canvas_sphere&lt;/code&gt; 等等。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://herenpeng.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://herenpeng.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>一篇博客教会你写序列化工具</title>
    <link href="https://herenpeng.github.io/2023/02/18/java/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E5%86%99%E5%BA%8F%E5%88%97%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    <id>https://herenpeng.github.io/2023/02/18/java/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E5%86%99%E5%BA%8F%E5%88%97%E5%8C%96%E5%B7%A5%E5%85%B7/</id>
    <published>2023-02-18T04:23:00.000Z</published>
    <updated>2023-02-25T15:42:32.344Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是序列化？&quot;&gt;&lt;a href=&quot;#什么是序列化？&quot; class=&quot;headerlink&quot; title=&quot;什么是序列化？&quot;&gt;&lt;/a&gt;什么是序列化？&lt;/h2&gt;&lt;p&gt;总所周知，在Java语言中，所有的数据都是以对象的形式存在Java堆中。&lt;/p&gt;
&lt;p&gt;但是Java对象如果要存储在别的地方，那么单纯的Java对象就无法满足了，必须要将Java对象转为一种可以存储的格式，这个转换的过程就是序列化。&lt;/p&gt;
&lt;p&gt;同理而言，将一种存储的格式转换为Java对象的过程，就是反序列化。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Jackson解析Yaml文件报错</title>
    <link href="https://herenpeng.github.io/2023/02/09/java/Jackson%E8%A7%A3%E6%9E%90Yaml%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99/"/>
    <id>https://herenpeng.github.io/2023/02/09/java/Jackson%E8%A7%A3%E6%9E%90Yaml%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99/</id>
    <published>2023-02-09T13:37:19.000Z</published>
    <updated>2023-02-09T13:37:19.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天在使用&lt;code&gt;jackson-dataformat-yaml&lt;/code&gt;框架解析&lt;code&gt;Yaml&lt;/code&gt;文件的时候，解析过程中爆出了这样一个错误。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
    <category term="Jackson" scheme="https://herenpeng.github.io/tags/Jackson/"/>
    
    <category term="Yaml" scheme="https://herenpeng.github.io/tags/Yaml/"/>
    
  </entry>
  
  <entry>
    <title>为什么1个字节是8个比特？</title>
    <link href="https://herenpeng.github.io/2023/01/18/computer/%E4%B8%BA%E4%BB%80%E4%B9%881%E4%B8%AA%E5%AD%97%E8%8A%82%E6%98%AF8%E4%B8%AA%E6%AF%94%E7%89%B9/"/>
    <id>https://herenpeng.github.io/2023/01/18/computer/%E4%B8%BA%E4%BB%80%E4%B9%881%E4%B8%AA%E5%AD%97%E8%8A%82%E6%98%AF8%E4%B8%AA%E6%AF%94%E7%89%B9/</id>
    <published>2023-01-18T06:17:02.000Z</published>
    <updated>2023-01-18T06:17:02.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;字节？比特？&quot;&gt;&lt;a href=&quot;#字节？比特？&quot; class=&quot;headerlink&quot; title=&quot;字节？比特？&quot;&gt;&lt;/a&gt;字节？比特？&lt;/h2&gt;&lt;p&gt;在很多IO操作的底层实现中，字节是最基本的操作单位，很多IO操作，都是将数据读取为字节数组，或者将一个字节数组写成数据。&lt;/p&gt;
&lt;p&gt;根据我们所学习的计算机知识，一个字节（byte）是八个比特位（bit），那么为什么一个字节是八个比特，而不是7个，或者说9个、16个？&lt;/p&gt;</summary>
    
    
    
    <category term="计算机" scheme="https://herenpeng.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="计算机" scheme="https://herenpeng.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你用Python操作Excel</title>
    <link href="https://herenpeng.github.io/2023/01/09/python/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%93%8D%E4%BD%9CExcel/"/>
    <id>https://herenpeng.github.io/2023/01/09/python/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%93%8D%E4%BD%9CExcel/</id>
    <published>2023-01-09T13:30:00.000Z</published>
    <updated>2023-01-09T13:30:00.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;工作之中经常要对一些数据进行分析或者整理，而且因为是和非技术人员进行对接，所以经常会使用Excel文件作为数据交接的工具，对于Excel的功能强大是毋庸置疑的，但是对于技术人员而言，使用Excel也有一些不方便的地方。&lt;br&gt;比如将原始数据整理为Excel文件，或者对Excel数据进行分析的时候，一些脚本语言读取Excel困难或者繁复，导致工作效率低下。&lt;br&gt;Python作为数据分析经常使用的脚本语言，自然也支持Excel的操作，今天就以本文来简单介绍几种简单操作Excel的工具。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Python" scheme="https://herenpeng.github.io/categories/Python/"/>
    
    
    <category term="Python" scheme="https://herenpeng.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>像MySql一样在控制台输出打印漂亮的表格</title>
    <link href="https://herenpeng.github.io/2022/09/14/other/%E5%83%8FMySql%E4%B8%80%E6%A0%B7%E5%9C%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E6%89%93%E5%8D%B0%E6%BC%82%E4%BA%AE%E7%9A%84%E8%A1%A8%E6%A0%BC/"/>
    <id>https://herenpeng.github.io/2022/09/14/other/%E5%83%8FMySql%E4%B8%80%E6%A0%B7%E5%9C%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E6%89%93%E5%8D%B0%E6%BC%82%E4%BA%AE%E7%9A%84%E8%A1%A8%E6%A0%BC/</id>
    <published>2022-09-14T08:27:16.000Z</published>
    <updated>2022-09-14T08:27:16.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;还记得大学期间第一次学习MySql数据，对于初学者而言，MySql没有漂亮的UI界面，只有那种黑乎乎的控制台界面，所有数据的展示都在控制台上输出和打印。&lt;br&gt;那个时候还是觉得MySql有一点Low，相比较之前学习的Sqlserver，Sqlserver好歹还有一个可以让初学者点击操作的UI界面。&lt;br&gt;但是伴随着在计算机领域的不断深入，编程知识的积累，反而却觉得MySql的控制台界面更加地优雅简洁，尤其记得MySql输出打印表格数据的时候，控制台界面上那个标准整齐的字符表格。&lt;br&gt;今天我就用一些空余时间，自己实现了一个类似表格输出打印程序。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="其他" scheme="https://herenpeng.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="Python" scheme="https://herenpeng.github.io/tags/Python/"/>
    
    <category term="MySQL" scheme="https://herenpeng.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>ProtoBuf入门</title>
    <link href="https://herenpeng.github.io/2022/02/14/java/ProtoBuf%E5%85%A5%E9%97%A8/"/>
    <id>https://herenpeng.github.io/2022/02/14/java/ProtoBuf%E5%85%A5%E9%97%A8/</id>
    <published>2022-02-14T07:17:11.000Z</published>
    <updated>2023-02-25T15:42:32.496Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是-ProtoBuf&quot;&gt;&lt;a href=&quot;#什么是-ProtoBuf&quot; class=&quot;headerlink&quot; title=&quot;什么是 ProtoBuf&quot;&gt;&lt;/a&gt;什么是 ProtoBuf&lt;/h2&gt;&lt;p&gt;&lt;code&gt;protocol buffers&lt;/code&gt; 是一种语言无关、平台无关、可扩展的序列化结构数据的方法，它可用于（数据）通信协议、数据存储等。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Protocol Buffers&lt;/code&gt; 是一种灵活，高效，自动化机制的结构数据序列化方法－可类比 &lt;code&gt;XML&lt;/code&gt;，但是比 &lt;code&gt;XML&lt;/code&gt;更小（3 ~ 10倍）、更快（20 ~ 100倍）、更为简单。&lt;/p&gt;
&lt;p&gt;你可以定义数据的结构，然后使用特殊生成的源代码轻松的在各种数据流中使用各种语言进行编写和读取结构数据。你甚至可以更新数据结构，而不破坏由旧数据结构编译的已部署程序。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
    <category term="ProtoBuf" scheme="https://herenpeng.github.io/tags/ProtoBuf/"/>
    
  </entry>
  
</feed>
