<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>青草蛋糕</title>
  
  <subtitle>每一秒钟的时间都值得铭记</subtitle>
  <link href="https://herenpeng.github.io/atom.xml" rel="self"/>
  
  <link href="https://herenpeng.github.io/"/>
  <updated>2023-06-03T05:29:39.000Z</updated>
  <id>https://herenpeng.github.io/</id>
  
  <author>
    <name>次时代小羊</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于Spring JDBCTemplate的数据库读写分离和主从复制</title>
    <link href="https://herenpeng.github.io/2023/06/03/java/%E5%9F%BA%E4%BA%8ESpring%20JDBCTemplate%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E5%92%8C%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
    <id>https://herenpeng.github.io/2023/06/03/java/%E5%9F%BA%E4%BA%8ESpring%20JDBCTemplate%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E5%92%8C%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</id>
    <published>2023-06-03T05:29:39.000Z</published>
    <updated>2023-06-03T05:29:39.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;数据库读写分离是很多互联网系统中用于提升访问性能的一种手段，其主要实现方式，便是将互联网系统对数据库的读操作和写操作分离在不同的数据库中，从而减少了数据库系统对锁资源的竞争，提升了系统数据库的性能。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
    <category term="MySQL" scheme="https://herenpeng.github.io/tags/MySQL/"/>
    
    <category term="Spring" scheme="https://herenpeng.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript实现贪吃蛇小游戏（网页单机版）</title>
    <link href="https://herenpeng.github.io/2023/05/13/javascript/JavaScript%E5%AE%9E%E7%8E%B0%E8%B4%AA%E5%90%83%E8%9B%87%E5%B0%8F%E6%B8%B8%E6%88%8F%EF%BC%88%E7%BD%91%E9%A1%B5%E5%8D%95%E6%9C%BA%E7%89%88%EF%BC%89/"/>
    <id>https://herenpeng.github.io/2023/05/13/javascript/JavaScript%E5%AE%9E%E7%8E%B0%E8%B4%AA%E5%90%83%E8%9B%87%E5%B0%8F%E6%B8%B8%E6%88%8F%EF%BC%88%E7%BD%91%E9%A1%B5%E5%8D%95%E6%9C%BA%E7%89%88%EF%BC%89/</id>
    <published>2023-05-13T04:27:59.000Z</published>
    <updated>2023-05-13T04:27:59.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天使用 &lt;code&gt;JavaScript&lt;/code&gt; 实现了一个网页版的贪吃蛇小游戏。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://herenpeng.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://herenpeng.github.io/tags/JavaScript/"/>
    
    <category term="贪吃蛇" scheme="https://herenpeng.github.io/tags/%E8%B4%AA%E5%90%83%E8%9B%87/"/>
    
    <category term="小游戏" scheme="https://herenpeng.github.io/tags/%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>七大排序算法的Python实现</title>
    <link href="https://herenpeng.github.io/2023/05/10/algorithm/%E4%B8%83%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://herenpeng.github.io/2023/05/10/algorithm/%E4%B8%83%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2023-05-10T07:51:13.000Z</published>
    <updated>2023-05-10T07:51:13.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天使用 &lt;code&gt;Python&lt;/code&gt; 实现了一遍七种常见的排序算法。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构与算法" scheme="https://herenpeng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="排序算法" scheme="https://herenpeng.github.io/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
    <category term="Python" scheme="https://herenpeng.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript实现一个排序算法的演示动画</title>
    <link href="https://herenpeng.github.io/2023/04/28/algorithm/JavaScript%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E6%BC%94%E7%A4%BA%E5%8A%A8%E7%94%BB/"/>
    <id>https://herenpeng.github.io/2023/04/28/algorithm/JavaScript%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E6%BC%94%E7%A4%BA%E5%8A%A8%E7%94%BB/</id>
    <published>2023-04-28T10:24:57.000Z</published>
    <updated>2023-04-28T10:24:57.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在学习排序算法的时候，单纯的文字或者代码无法直观地表示出算法的具体排序过程，而自己手动画出示意图也比较麻烦，所以作者使用 JavaScript 实现了一个简单的排序算法的演示动画页面。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="数据结构与算法" scheme="https://herenpeng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="JavaScript" scheme="https://herenpeng.github.io/tags/JavaScript/"/>
    
    <category term="排序算法" scheme="https://herenpeng.github.io/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>一篇博客教会你怎么使用Docker安装并配置Nginx</title>
    <link href="https://herenpeng.github.io/2023/03/16/linux/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8Docker%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AENginx/"/>
    <id>https://herenpeng.github.io/2023/03/16/linux/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8Docker%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AENginx/</id>
    <published>2023-03-16T15:13:31.000Z</published>
    <updated>2023-03-16T15:13:31.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;首先我们需要安装Docker，如果没有安装Docker的朋友，可以参考我以前的博客&lt;a href=&quot;/2020/04/16/tool/一篇博客教会你怎么安装Docker/&quot;&gt;一篇博客教会你怎么安装Docker&lt;/a&gt;进行Docker的安装。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://herenpeng.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://herenpeng.github.io/tags/Linux/"/>
    
    <category term="Docker" scheme="https://herenpeng.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>使用Python写一个一键项目部署工具</title>
    <link href="https://herenpeng.github.io/2023/03/15/python/%E4%BD%BF%E7%94%A8Python%E5%86%99%E4%B8%80%E4%B8%AA%E4%B8%80%E9%94%AE%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%B7%A5%E5%85%B7/"/>
    <id>https://herenpeng.github.io/2023/03/15/python/%E4%BD%BF%E7%94%A8Python%E5%86%99%E4%B8%80%E4%B8%AA%E4%B8%80%E9%94%AE%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%B7%A5%E5%85%B7/</id>
    <published>2023-03-15T12:07:54.000Z</published>
    <updated>2023-03-15T12:24:04.473Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近在工作中总是需要在开发和测试环境频繁部署项目，之前使用的工具是 &lt;code&gt;filezilla&lt;/code&gt; 和 &lt;code&gt;XShell&lt;/code&gt;，分别用来上传文件和登录远程终端，这两个工具虽然功能强大，但是都需要手动执行操作。&lt;/p&gt;
&lt;p&gt;为了减少这些繁琐的工作，于是使用功能强大的 &lt;code&gt;Python&lt;/code&gt; 编写了一个一键部署项目的脚本。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://herenpeng.github.io/categories/Python/"/>
    
    
    <category term="Python" scheme="https://herenpeng.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>推荐几种简洁美观的博客背景效果</title>
    <link href="https://herenpeng.github.io/2023/03/14/javascript/%E6%8E%A8%E8%8D%90%E5%87%A0%E7%A7%8D%E7%AE%80%E6%B4%81%E7%BE%8E%E8%A7%82%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%83%8C%E6%99%AF%E6%95%88%E6%9E%9C/"/>
    <id>https://herenpeng.github.io/2023/03/14/javascript/%E6%8E%A8%E8%8D%90%E5%87%A0%E7%A7%8D%E7%AE%80%E6%B4%81%E7%BE%8E%E8%A7%82%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%83%8C%E6%99%AF%E6%95%88%E6%9E%9C/</id>
    <published>2023-03-14T14:21:09.000Z</published>
    <updated>2023-03-14T14:21:09.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;在很多的博客网页中，都有一些非常简洁美观的博客动画背景，比如 &lt;code&gt;Canvas-Ribbon&lt;/code&gt;、 &lt;code&gt;three-waves&lt;/code&gt;、 &lt;code&gt;canvas-nest&lt;/code&gt;、 &lt;code&gt;canvas_lines&lt;/code&gt;、 &lt;code&gt;canvas_sphere&lt;/code&gt; 等等。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://herenpeng.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://herenpeng.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>一篇博客教会你写序列化工具</title>
    <link href="https://herenpeng.github.io/2023/02/18/java/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E5%86%99%E5%BA%8F%E5%88%97%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    <id>https://herenpeng.github.io/2023/02/18/java/%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%95%99%E4%BC%9A%E4%BD%A0%E5%86%99%E5%BA%8F%E5%88%97%E5%8C%96%E5%B7%A5%E5%85%B7/</id>
    <published>2023-02-18T04:23:00.000Z</published>
    <updated>2023-02-25T15:42:32.344Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是序列化？&quot;&gt;&lt;a href=&quot;#什么是序列化？&quot; class=&quot;headerlink&quot; title=&quot;什么是序列化？&quot;&gt;&lt;/a&gt;什么是序列化？&lt;/h2&gt;&lt;p&gt;总所周知，在Java语言中，所有的数据都是以对象的形式存在Java堆中。&lt;/p&gt;
&lt;p&gt;但是Java对象如果要存储在别的地方，那么单纯的Java对象就无法满足了，必须要将Java对象转为一种可以存储的格式，这个转换的过程就是序列化。&lt;/p&gt;
&lt;p&gt;同理而言，将一种存储的格式转换为Java对象的过程，就是反序列化。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Jackson解析Yaml文件报错</title>
    <link href="https://herenpeng.github.io/2023/02/09/java/Jackson%E8%A7%A3%E6%9E%90Yaml%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99/"/>
    <id>https://herenpeng.github.io/2023/02/09/java/Jackson%E8%A7%A3%E6%9E%90Yaml%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99/</id>
    <published>2023-02-09T13:37:19.000Z</published>
    <updated>2023-02-09T13:37:19.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天在使用&lt;code&gt;jackson-dataformat-yaml&lt;/code&gt;框架解析&lt;code&gt;Yaml&lt;/code&gt;文件的时候，解析过程中爆出了这样一个错误。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
    <category term="Jackson" scheme="https://herenpeng.github.io/tags/Jackson/"/>
    
    <category term="Yaml" scheme="https://herenpeng.github.io/tags/Yaml/"/>
    
  </entry>
  
  <entry>
    <title>为什么1个字节是8个比特？</title>
    <link href="https://herenpeng.github.io/2023/01/18/computer/%E4%B8%BA%E4%BB%80%E4%B9%881%E4%B8%AA%E5%AD%97%E8%8A%82%E6%98%AF8%E4%B8%AA%E6%AF%94%E7%89%B9/"/>
    <id>https://herenpeng.github.io/2023/01/18/computer/%E4%B8%BA%E4%BB%80%E4%B9%881%E4%B8%AA%E5%AD%97%E8%8A%82%E6%98%AF8%E4%B8%AA%E6%AF%94%E7%89%B9/</id>
    <published>2023-01-18T06:17:02.000Z</published>
    <updated>2023-01-18T06:17:02.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;字节？比特？&quot;&gt;&lt;a href=&quot;#字节？比特？&quot; class=&quot;headerlink&quot; title=&quot;字节？比特？&quot;&gt;&lt;/a&gt;字节？比特？&lt;/h2&gt;&lt;p&gt;在很多IO操作的底层实现中，字节是最基本的操作单位，很多IO操作，都是将数据读取为字节数组，或者将一个字节数组写成数据。&lt;/p&gt;
&lt;p&gt;根据我们所学习的计算机知识，一个字节（byte）是八个比特位（bit），那么为什么一个字节是八个比特，而不是7个，或者说9个、16个？&lt;/p&gt;</summary>
    
    
    
    <category term="计算机" scheme="https://herenpeng.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="计算机" scheme="https://herenpeng.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你用Python操作Excel</title>
    <link href="https://herenpeng.github.io/2023/01/09/python/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%93%8D%E4%BD%9CExcel/"/>
    <id>https://herenpeng.github.io/2023/01/09/python/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%93%8D%E4%BD%9CExcel/</id>
    <published>2023-01-09T13:30:00.000Z</published>
    <updated>2023-01-09T13:30:00.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;工作之中经常要对一些数据进行分析或者整理，而且因为是和非技术人员进行对接，所以经常会使用Excel文件作为数据交接的工具，对于Excel的功能强大是毋庸置疑的，但是对于技术人员而言，使用Excel也有一些不方便的地方。&lt;br&gt;比如将原始数据整理为Excel文件，或者对Excel数据进行分析的时候，一些脚本语言读取Excel困难或者繁复，导致工作效率低下。&lt;br&gt;Python作为数据分析经常使用的脚本语言，自然也支持Excel的操作，今天就以本文来简单介绍几种简单操作Excel的工具。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Python" scheme="https://herenpeng.github.io/categories/Python/"/>
    
    
    <category term="Python" scheme="https://herenpeng.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>像MySql一样在控制台输出打印漂亮的表格</title>
    <link href="https://herenpeng.github.io/2022/09/14/other/%E5%83%8FMySql%E4%B8%80%E6%A0%B7%E5%9C%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E6%89%93%E5%8D%B0%E6%BC%82%E4%BA%AE%E7%9A%84%E8%A1%A8%E6%A0%BC/"/>
    <id>https://herenpeng.github.io/2022/09/14/other/%E5%83%8FMySql%E4%B8%80%E6%A0%B7%E5%9C%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E6%89%93%E5%8D%B0%E6%BC%82%E4%BA%AE%E7%9A%84%E8%A1%A8%E6%A0%BC/</id>
    <published>2022-09-14T08:27:16.000Z</published>
    <updated>2022-09-14T08:27:16.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;还记得大学期间第一次学习MySql数据，对于初学者而言，MySql没有漂亮的UI界面，只有那种黑乎乎的控制台界面，所有数据的展示都在控制台上输出和打印。&lt;br&gt;那个时候还是觉得MySql有一点Low，相比较之前学习的Sqlserver，Sqlserver好歹还有一个可以让初学者点击操作的UI界面。&lt;br&gt;但是伴随着在计算机领域的不断深入，编程知识的积累，反而却觉得MySql的控制台界面更加地优雅简洁，尤其记得MySql输出打印表格数据的时候，控制台界面上那个标准整齐的字符表格。&lt;br&gt;今天我就用一些空余时间，自己实现了一个类似表格输出打印程序。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="其他" scheme="https://herenpeng.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="Python" scheme="https://herenpeng.github.io/tags/Python/"/>
    
    <category term="MySQL" scheme="https://herenpeng.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>ProtoBuf入门</title>
    <link href="https://herenpeng.github.io/2022/02/14/java/ProtoBuf%E5%85%A5%E9%97%A8/"/>
    <id>https://herenpeng.github.io/2022/02/14/java/ProtoBuf%E5%85%A5%E9%97%A8/</id>
    <published>2022-02-14T07:17:11.000Z</published>
    <updated>2023-02-25T15:42:32.496Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是-ProtoBuf&quot;&gt;&lt;a href=&quot;#什么是-ProtoBuf&quot; class=&quot;headerlink&quot; title=&quot;什么是 ProtoBuf&quot;&gt;&lt;/a&gt;什么是 ProtoBuf&lt;/h2&gt;&lt;p&gt;&lt;code&gt;protocol buffers&lt;/code&gt; 是一种语言无关、平台无关、可扩展的序列化结构数据的方法，它可用于（数据）通信协议、数据存储等。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Protocol Buffers&lt;/code&gt; 是一种灵活，高效，自动化机制的结构数据序列化方法－可类比 &lt;code&gt;XML&lt;/code&gt;，但是比 &lt;code&gt;XML&lt;/code&gt;更小（3 ~ 10倍）、更快（20 ~ 100倍）、更为简单。&lt;/p&gt;
&lt;p&gt;你可以定义数据的结构，然后使用特殊生成的源代码轻松的在各种数据流中使用各种语言进行编写和读取结构数据。你甚至可以更新数据结构，而不破坏由旧数据结构编译的已部署程序。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
    <category term="ProtoBuf" scheme="https://herenpeng.github.io/tags/ProtoBuf/"/>
    
  </entry>
  
  <entry>
    <title>Python序列</title>
    <link href="https://herenpeng.github.io/2021/11/29/python/Python%E5%BA%8F%E5%88%97/"/>
    <id>https://herenpeng.github.io/2021/11/29/python/Python%E5%BA%8F%E5%88%97/</id>
    <published>2021-11-28T22:00:00.000Z</published>
    <updated>2023-02-25T15:42:32.505Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;序列是一块用于存放多个值的连续的内存空间，并按照一定的顺序排列，每一个值（称为元素）都分配一个数字（称为索引或者位置）。通过索引可以取出对应位置的值。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Python" scheme="https://herenpeng.github.io/categories/Python/"/>
    
    
    <category term="Python" scheme="https://herenpeng.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python基本数据类型</title>
    <link href="https://herenpeng.github.io/2021/11/21/python/Python%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://herenpeng.github.io/2021/11/21/python/Python%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2021-11-21T07:51:43.000Z</published>
    <updated>2023-02-25T15:42:32.047Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Python 有多种基本数据类型，用来存储内存中的数据。Python 一共提供了三种基本数据类型，其中分为是：数值型、字符型、布尔型。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Python" scheme="https://herenpeng.github.io/categories/Python/"/>
    
    
    <category term="Python" scheme="https://herenpeng.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>WebStrom 开发 Vue 项目，安装 ESLint 代码风格检查工具</title>
    <link href="https://herenpeng.github.io/2021/08/30/javascript/WebStrom%20%E5%BC%80%E5%8F%91%20Vue%20%E9%A1%B9%E7%9B%AE%EF%BC%8C%E5%AE%89%E8%A3%85%20ESLint%20%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E6%A3%80%E6%9F%A5%E5%B7%A5%E5%85%B7/"/>
    <id>https://herenpeng.github.io/2021/08/30/javascript/WebStrom%20%E5%BC%80%E5%8F%91%20Vue%20%E9%A1%B9%E7%9B%AE%EF%BC%8C%E5%AE%89%E8%A3%85%20ESLint%20%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E6%A3%80%E6%9F%A5%E5%B7%A5%E5%85%B7/</id>
    <published>2021-08-30T01:02:20.000Z</published>
    <updated>2023-02-25T15:42:32.152Z</updated>
    
    
    <summary type="html">&lt;p&gt;WebStrom 开发 Vue 项目，安装 ESLint 代码风格检查工具&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://herenpeng.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://herenpeng.github.io/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://herenpeng.github.io/tags/Vue/"/>
    
    <category term="WebStrom" scheme="https://herenpeng.github.io/tags/WebStrom/"/>
    
  </entry>
  
  <entry>
    <title>Netty4入门教程，搭建简单的Netty服务端和客户端</title>
    <link href="https://herenpeng.github.io/2021/08/25/java/Netty4%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Netty%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%92%8C%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    <id>https://herenpeng.github.io/2021/08/25/java/Netty4%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Netty%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%92%8C%E5%AE%A2%E6%88%B7%E7%AB%AF/</id>
    <published>2021-08-25T09:05:17.000Z</published>
    <updated>2021-08-25T09:05:17.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;什么是-Netty&quot;&gt;&lt;a href=&quot;#什么是-Netty&quot; class=&quot;headerlink&quot; title=&quot;什么是 Netty?&quot;&gt;&lt;/a&gt;什么是 Netty?&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Netty 是 jboss 提供的一个 Java 开源框架，Netty 提供异步的、事件驱动的网络应用程序框架和工具，用以快速开发高性能、高可用性的网络服务器和客户端程序。也就是说 Netty 是一个基于 NIO 的编程框架，使用 Netty 可以快速的开发出一个网络应用。&lt;br&gt;由于 Java 自带的 NIO API 使用起来非常复杂，并且还可能出现 Epoll Bug，这使得我们使用原生的 NIO 来进行网络编程存在很大的难度且非常耗时。但是 Netty 良好的设计可以使开发人员快速高效的进行网络应用开发。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
    <category term="Netty" scheme="https://herenpeng.github.io/tags/Netty/"/>
    
  </entry>
  
  <entry>
    <title>Java位运算，Int类型存储用户的登录足迹</title>
    <link href="https://herenpeng.github.io/2021/08/23/java/Java%E4%BD%8D%E8%BF%90%E7%AE%97%EF%BC%8CInt%E7%B1%BB%E5%9E%8B%E5%AD%98%E5%82%A8%E7%94%A8%E6%88%B7%E7%9A%84%E7%99%BB%E5%BD%95%E8%B6%B3%E8%BF%B9/"/>
    <id>https://herenpeng.github.io/2021/08/23/java/Java%E4%BD%8D%E8%BF%90%E7%AE%97%EF%BC%8CInt%E7%B1%BB%E5%9E%8B%E5%AD%98%E5%82%A8%E7%94%A8%E6%88%B7%E7%9A%84%E7%99%BB%E5%BD%95%E8%B6%B3%E8%BF%B9/</id>
    <published>2021-08-23T15:08:20.000Z</published>
    <updated>2023-02-25T15:42:32.078Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;今天接到一家公司的面试邀请，于是我来到了这家公司，前台的小姐姐面带微笑地把我请进会议室，等待了一会，一位面试官走了进来……&lt;/p&gt;
&lt;p&gt;在进行了简单的自我介绍之后，面试官开始发问了……&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>低代码开发，手写一款代码生成工具</title>
    <link href="https://herenpeng.github.io/2021/08/11/java/%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%BC%80%E5%8F%91%EF%BC%8C%E6%89%8B%E5%86%99%E4%B8%80%E6%AC%BE%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7/"/>
    <id>https://herenpeng.github.io/2021/08/11/java/%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%BC%80%E5%8F%91%EF%BC%8C%E6%89%8B%E5%86%99%E4%B8%80%E6%AC%BE%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7/</id>
    <published>2021-08-10T16:21:44.000Z</published>
    <updated>2023-02-27T23:03:26.999Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;低代码平台的一个核心就是，使用可视化的操作，生成项目系统中的非核心代码，从而大大降低了重复代码的编写工作，使开发者们可以更加专注于核心代码和业务功能的设计和开发工作。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
    <category term="SpringBoot" scheme="https://herenpeng.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>上班聊天，摸鱼神器，手写一款即时通讯工具（附源码！！！）</title>
    <link href="https://herenpeng.github.io/2021/08/07/java/%E4%B8%8A%E7%8F%AD%E8%81%8A%E5%A4%A9%EF%BC%8C%E6%91%B8%E9%B1%BC%E7%A5%9E%E5%99%A8%EF%BC%8C%E6%89%8B%E5%86%99%E4%B8%80%E6%AC%BE%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF%E5%B7%A5%E5%85%B7%EF%BC%88%E9%99%84%E6%BA%90%E7%A0%81%EF%BC%81%EF%BC%81%EF%BC%81%EF%BC%89/"/>
    <id>https://herenpeng.github.io/2021/08/07/java/%E4%B8%8A%E7%8F%AD%E8%81%8A%E5%A4%A9%EF%BC%8C%E6%91%B8%E9%B1%BC%E7%A5%9E%E5%99%A8%EF%BC%8C%E6%89%8B%E5%86%99%E4%B8%80%E6%AC%BE%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF%E5%B7%A5%E5%85%B7%EF%BC%88%E9%99%84%E6%BA%90%E7%A0%81%EF%BC%81%EF%BC%81%EF%BC%81%EF%BC%89/</id>
    <published>2021-08-07T02:46:02.000Z</published>
    <updated>2023-02-25T15:42:32.568Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;认真工作不叫做赚钱，那叫做用劳动换取报酬，上班摸鱼才是真的赚钱。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Java" scheme="https://herenpeng.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://herenpeng.github.io/tags/Java/"/>
    
    <category term="Netty" scheme="https://herenpeng.github.io/tags/Netty/"/>
    
  </entry>
  
</feed>
